import dayjs from 'dayjs/esm';

import { EstadoDocumentoComercial } from 'app/entities/enumerations/estado-documento-comercial.model';

import { IFactura, NewFactura } from './factura.model';

export const sampleWithRequiredData: IFactura = {
  id: 85429,
  numero: 'National firewall',
  dataEmissao: dayjs('2023-09-03'),
  dataVencimento: dayjs('2023-09-03'),
  inicioTransporte: dayjs('2023-09-03T18:02'),
  fimTransporte: dayjs('2023-09-03T05:53'),
  estado: EstadoDocumentoComercial['A'],
  origem: 'mindshare Dynamic',
  timestamp: dayjs('2023-09-03T02:10'),
  moeda: 'Cambridgeshi',
  totalIliquido: 17645,
  totalDescontoComercial: 63796,
  totalLiquido: 53706,
  totalImpostoIVA: 62359,
  totalImpostoEspecialConsumo: 61008,
  totalDescontoFinanceiro: 391,
  totalFactura: 30699,
  totalImpostoRetencaoFonte: 89079,
  totalPagar: 40632,
  totalPago: 66387,
  totalDiferenca: 9202,
};

export const sampleWithPartialData: IFactura = {
  id: 85717,
  numero: 'Product Camisa USB',
  dataEmissao: dayjs('2023-09-03'),
  dataVencimento: dayjs('2023-09-03'),
  cae: 'cinzento p',
  inicioTransporte: dayjs('2023-09-03T15:32'),
  fimTransporte: dayjs('2023-09-03T00:45'),
  observacaoInterna: '../fake-data/blob/hipster.txt',
  estado: EstadoDocumentoComercial['A'],
  origem: 'invoice Security Frango',
  timestamp: dayjs('2023-09-03T03:35'),
  moeda: 'web-enabled ',
  totalMoedaEntrangeira: 87543,
  totalIliquido: 93437,
  totalDescontoComercial: 79605,
  totalLiquido: 6363,
  totalImpostoIVA: 83719,
  totalImpostoEspecialConsumo: 12657,
  totalDescontoFinanceiro: 77684,
  totalFactura: 32982,
  totalImpostoRetencaoFonte: 86671,
  totalPagar: 89686,
  debito: 80607,
  credito: 41730,
  totalPago: 56164,
  totalDiferenca: 77687,
  isAutoFacturacao: true,
  isRegimeCaixa: false,
  hashShort: 'Borders up',
  hashControl: 'copy',
  keyVersion: 48949,
};

export const sampleWithFullData: IFactura = {
  id: 353,
  numero: 'payment engineer',
  codigoEntrega: 'calculate Gen√©rico',
  dataEmissao: dayjs('2023-09-03'),
  dataVencimento: dayjs('2023-09-03'),
  cae: 'Reduced Be',
  inicioTransporte: dayjs('2023-09-03T06:36'),
  fimTransporte: dayjs('2023-09-03T18:57'),
  observacaoGeral: '../fake-data/blob/hipster.txt',
  observacaoInterna: '../fake-data/blob/hipster.txt',
  estado: EstadoDocumentoComercial['A'],
  origem: 'calculating digital Credit',
  timestamp: dayjs('2023-09-03T21:54'),
  isMoedaEntrangeira: false,
  moeda: 'SCSI',
  cambio: 64217,
  totalMoedaEntrangeira: 85354,
  totalIliquido: 41884,
  totalDescontoComercial: 50895,
  totalLiquido: 68376,
  totalImpostoIVA: 58604,
  totalImpostoEspecialConsumo: 10036,
  totalDescontoFinanceiro: 20136,
  totalFactura: 41090,
  totalImpostoRetencaoFonte: 76230,
  totalPagar: 92900,
  debito: 247,
  credito: 32035,
  totalPago: 41035,
  totalDiferenca: 33221,
  isAutoFacturacao: true,
  isRegimeCaixa: true,
  isEmitidaNomeEContaTerceiro: false,
  isNovo: true,
  isFiscalizado: true,
  signText: 'protocol Brand',
  hash: 'input Motorway',
  hashShort: 'Madeira complexity',
  hashControl: 'Feito system',
  keyVersion: 27559,
};

export const sampleWithNewData: NewFactura = {
  numero: 'Marketing deposit',
  dataEmissao: dayjs('2023-09-03'),
  dataVencimento: dayjs('2023-09-03'),
  inicioTransporte: dayjs('2023-09-03T15:55'),
  fimTransporte: dayjs('2023-09-03T10:51'),
  estado: EstadoDocumentoComercial['A'],
  origem: 'Rhode withdrawal',
  timestamp: dayjs('2023-09-03T23:55'),
  moeda: 'connecting P',
  totalIliquido: 15360,
  totalDescontoComercial: 82141,
  totalLiquido: 4851,
  totalImpostoIVA: 96878,
  totalImpostoEspecialConsumo: 33659,
  totalDescontoFinanceiro: 47305,
  totalFactura: 92475,
  totalImpostoRetencaoFonte: 46169,
  totalPagar: 88416,
  totalPago: 32971,
  totalDiferenca: 31868,
  id: null,
};

Object.freeze(sampleWithNewData);
Object.freeze(sampleWithRequiredData);
Object.freeze(sampleWithPartialData);
Object.freeze(sampleWithFullData);
